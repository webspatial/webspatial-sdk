name: Changesets

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

on:
  push:
    branches:
      - stable

env:
  CI: true
  SKIP_SIMPLE_GIT_HOOKS: 1

jobs:
  version:
    if: github.repository == 'webspatial/webspatial-sdk'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Use full git history to enable tagging

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies and build
        run: pnpm run setup

      - name: Create and publish versions
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore: update versions"
          title: "chore: update versions"
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push Git tags for published packages
        if: steps.changesets.outputs.published == 'true'
        run: |
          # Configure Git user
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # get version from publishedPackages JSON first element
          version=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[0].version')
          tag="v${version}"

          echo "Creating tag $tag"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists, skipping."
          else
            git tag "$tag"
          fi

          # push tags
          git push origin "$tag"
      - name: Create or update Pull Request to stable
        if: steps.changesets.outputs.published == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: sync stable â†’ main"
          title: "Merge stable into main"
          body: |
            This pull request was created automatically by GitHub Actions.
            It merges the latest release from `stable` into `main`.
          branch: "stable-to-main"
          base: "main"
