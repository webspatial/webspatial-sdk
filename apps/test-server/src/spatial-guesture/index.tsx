import ReactDOM from 'react-dom/client'

import { enableDebugTool, Model } from '@webspatial/react-sdk'

enableDebugTool()

function CaseA() {
  // Simple scenario
  // Enable enablegesture for SpatialDiv
  // Result: Both onClick and onSpatialClick are effective
  return (
    <div
      enable-xr
      enablegesture={true}
      data-name="parent spatial div"
      onClick={() => {
        console.log('hi tom')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <button
        onClick={(event: MouseEvent) => {
          console.log('DDD onclick')
        }}
        style={{
          width: '200px',
          height: '200px',
          background: 'blue',
        }}
      >
        DDD
      </button>
    </div>
  )
}

function CaseB() {
  // Double nesting scenario
  // Parent SpatialDiv enables enablegesture
  // Child SpatialDiv enables enablegesture
  // Child SpatialDiv
  //      sub button onClick enables e.stopPropagation()
  //      child spatial div onclick does not enable e.stopPropagation()
  // Result:
  //  Webview internal behavior: The sub button click in the child Webview takes effect and does not bubble to the parent Webview
  //    Child spatial div click takes effect and successfully bubbles to the parent Webview
  //    e.stopPropagation() can prevent event propagation, even across Webview propagation,
  //        This is determined by the mechanism that the child SpatialDiv is generated by the parent webview through window.open, and needs to be verified on the Android platform
  //  Both parent and child onSpatialClick are effective
  return (
    <div
      enable-xr
      enablegesture={true}
      debugName="parent spatial div"
      onClick={() => {
        console.log('parent spatial div clicked')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <div
        enable-xr
        enablegesture={true}
        debugName="child spatial div"
        style={{
          width: '800px',
          height: '200px',
          '--xr-back': 100,
          background: 'green',
        }}
        onClick={() => {
          console.log('child spatial div onclick')
        }}
      >
        this is sub child
        <div
          onClick={() => {
            console.log('sub button onclick')
          }}
        >
          sub button
        </div>
        <div
          onClick={e => {
            e.stopPropagation()
            console.log('DDD onclick')
          }}
          style={{
            width: '200px',
            height: '200px',
            background: 'blue',
          }}
        >
          DDD
        </div>
      </div>
    </div>
  )
}

function CaseC() {
  // Double nesting scenario
  // Parent SpatialDiv does not enable enablegesture
  // Child SpatialDiv does not enable enablegesture
  // Child SpatialDiv sub button onClick does not enable
  // Result:
  //  Webview internal behavior: The sub button click in the child Webview takes effect and successfully bubbles to the parent div and parent Webview
  //  Both parent and child onSpatialClick are ineffective
  return (
    <div
      enable-xr
      enablegesture={false}
      debugName="parent spatial div"
      onClick={() => {
        console.log('hi tom')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <div
        enable-xr
        enablegesture={false}
        debugName="child spatial div"
        style={{
          width: '800px',
          height: '200px',
          '--xr-back': 100,
          background: 'green',
        }}
        onClick={(e: MouseEvent) => {
          console.log('child spatial div onclick')
        }}
      >
        this is sub child
        <div
          onClick={e => {
            console.log('sub button onclick')
          }}
        >
          sub button
        </div>
      </div>

      <button
        onClick={() => {
          console.log('DDD onclick')
        }}
        style={{
          width: '200px',
          height: '200px',
          background: 'blue',
        }}
      >
        DDD
      </button>
    </div>
  )
}

function CaseD() {
  // Double nesting scenario
  // Parent SpatialDiv enables enablegesture
  // Child Model does not enable enablegesture
  // Result:
  //   Model has no onClick event
  //   Clicking Model will not trigger the onClick event of the parent SpatialDiv
  //   Clicking Model will trigger the SpatialGesture event of the parent SpatialDiv

  return (
    <div
      enable-xr
      enablegesture={true}
      data-name="parent spatial div"
      onClick={() => {
        console.log('hi tom')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <Model
        style={{
          width: '800px',
          height: '200px',
        }}
        enablegesture={false}
      >
        <source
          src={'http://localhost:5173/public/modelasset/cone.usdz'}
          type="model/vnd.usdz+zip"
        />

        <div> this is place holder when failure </div>
      </Model>

      <button
        onClick={() => {
          console.log('DDD onclick')
        }}
        style={{
          width: '200px',
          height: '200px',
          background: 'blue',
        }}
      >
        DDD
      </button>
    </div>
  )
}

function CaseE() {
  // Double nesting scenario
  // Parent SpatialDiv enables enablegesture
  // Child Model enables enablegesture
  // Result:
  //   Model has no onClick event
  //   Clicking Model will not trigger the onClick event of the parent SpatialDiv
  //   Clicking Model will trigger both the parent SpatialDiv and Model's SpatialGesture events

  return (
    <div
      enable-xr
      enablegesture={true}
      debugName="parent spatial div"
      onClick={() => {
        console.log('hi tom')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <Model
        style={{
          width: '800px',
          height: '200px',
        }}
        enablegesture={true}
      >
        <source
          src={'http://localhost:5173/public/modelasset/cone.usdz'}
          type="model/vnd.usdz+zip"
        />

        <div> this is place holder when failure </div>
      </Model>

      <button
        onClick={() => {
          console.log('DDD onclick')
        }}
        style={{
          width: '200px',
          height: '200px',
          background: 'blue',
        }}
      >
        DDD
      </button>
    </div>
  )
}

function App() {
  return (
    <div
      enable-xr
      enablegesture={true}
      debugName="parent spatial div"
      onClick={() => {
        console.log('hi tom')
      }}
      style={{
        width: '800px',
        height: '800px',
        '--xr-back': 100,
      }}
    >
      <div
        style={{
          width: '800px',
          height: '200px',
          '--xr-background-material': 'translucent',
          // background: 'white',
        }}
      >
        this is parent spatialdiv tom
      </div>

      <button
        onClick={() => {
          console.log('DDD onclick')
        }}
        style={{
          width: '200px',
          height: '200px',
          background: 'blue',
        }}
      >
        DDD
      </button>
    </div>
  )
}

ReactDOM.createRoot(document.getElementById('root')!).render(<CaseD />)
