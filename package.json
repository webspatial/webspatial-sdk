{
  "name": "xrsdk",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "postinstall": "simple-git-hooks",
    "buildPackages": "cd runtime/ && npm run build && cd .. && cd react/ && npm run build && cd .. && cd jsx-runtime/ && npm run build && cd ..",
    "setup": "pnpm install && npm run buildPackages",
    "watchNPM": "concurrently \"cd runtime/ && npm run start\" \"cd react/ && npm run start\" \"cd jsx-runtime/ && npm run start\"",
    "testServer": "cd testServer/ && npm run dev -- --host",
    "dev": "concurrently \"npm run watchNPM\" \"npm run testServer\"",
    "test": "tsc -p runtime/tsconfig.json && tsc -p react/tsconfig.json && tsc -p testServer/tsconfig.json",
    "format": "pnpm -r run format"
  },
  "simple-git-hooks": {
    "pre-commit": "pnpm lint-staged && pnpm test"
  },
  "lint-staged": {
    "*.{js,json}": [
      "prettier --write"
    ],
    "*.ts?(x)": [
      "prettier --write"
    ],
    "*.swift": [
      "swiftformat"
    ],
    "*": [
      "node -e \"const fs = require('fs'); process.argv.slice(1).forEach(file => { if (fs.existsSync(file)) { const size = fs.statSync(file).size; if (size >= 1048576) { console.error(`Error: ${file} is 1MB or larger`); process.exit(1); }}})\""
    ],
    "!(testServer/qaTestApp/**)": [
      "node -e \"const fs=require('fs'),f=process.argv[1],c=fs.readFileSync(f,'utf8').split('\\n').filter(l=>/[\\u4E00-\\u9FFF]/.test(l)); if(c.length) { console.error('Non english characters detected:\\n' + c.join('\\n')); process.exit(1); }\""
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/spatial-web/XRSDK.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/spatial-web/XRSDK/issues"
  },
  "homepage": "https://github.com/spatial-web/XRSDK#readme",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3",
    "simple-git-hooks": "^2.11.1",
    "typescript": "^5.7.3"
  }
}
